{"version":3,"sources":["utils/colors.js","utils/AssetProvider.js","texts/content.js","texts/titles.js","utils/ScrollView.js","utils/View.js","inputs/button.js","inputs/inputs.js","App.js","assets/fonts/Open_Sans/OpenSans-Regular.ttf","assets/fonts/Open_Sans/OpenSans-Bold.ttf","assets/fonts/Montserrat/Montserrat-Black.ttf","assets/fonts/Montserrat/Montserrat-Bold.ttf","assets/fonts/Montserrat/Montserrat-Light.ttf"],"names":["brandColors","infoColors","contentFonts","content","require","bold","title","heading","lightTitle","propDrill","children","prop","React","Children","map","child","isValidElement","cloneElement","AssetProvider","props","setDarkModeState","obj","console","log","onModeChange","this","setState","isDarkMode","Appearance","addChangeListener","colorScheme","tmp","getColorScheme","state","fontsLoaded","a","async","Font","_loadFontsAsync","SafeAreaView","style","flex","backgroundColor","Component","lightModeStyle","text","color","quoteText","darkModeStyle","Text","styleMode","fontFamily","justifyContent","flexDirection","flexWrap","italic","fontStyle","sup","fontSize","textAlignVertical","height","textAlign","sub","Link","undefined","textDecorationLine","TouchableOpacity","onPress","Linking","openURL","href","margin","padding","alignSelf","Quote","secondStyle","StyleSheet","create","sec","paddingHorizontal","alignItems","containerStyle","authorStyle","author","Intern_Title","args","light","lineHeight","Title","Heading","paddingLeft","h6","h5","h4","h3","h2","h1","borderBottomWidth","borderBottomColor","ScrollView","lightModeStyleGuide","container","darkModeStyleGuide","View","propTypes","PropTypes","object","Button","globalTextStyle","secondary","borderRadius","paddingVertical","borderColor","borderWidth","pressedCustomContainerStyle","containerCustomStyle","callback","leftIcon","Pressable","onPressOut","pressedOutFunction","onPressIn","pressedInFunction","Input","defaultOnChangeText","value","onChangeText","borderBottomStyle","centerAlign","paddingRight","leftAlign","error","inputStyle","errorStyle","keyboardType","keyboardAppearance","placeholder","boolean","rightAlign","Dimensions","get","width","addEventListener","window","screen","innerWidth","MaterialCommunityIcons","name","size","App","styles","marginBottom","marginTop","flexShrink","marginLeft","paddingBottom","module","exports"],"mappings":"iUACaA,EACF,UADEA,EAEF,UAFEA,EAGF,UAHEA,EAIF,UAJEA,EAKF,UALEA,EAMF,UANEA,EAOF,UAPEA,EAQF,UAREA,EASF,UAeEC,EAKF,U,g/BCzBJ,IAAMC,EAAe,CAC1BC,QAASC,EAAQ,KACjBC,KAAMD,EAAQ,KACdE,MAAOF,EAAQ,KACfG,QAASH,EAAQ,KACjBI,WAAYJ,EAAQ,MAGf,SAASK,EAAUC,EAAUC,GASlC,OAR0BC,IAAMC,SAASC,IAAIJ,GAAU,SAAAK,GAErD,OAAIH,IAAMI,eAAeD,GAChBH,IAAMK,aAAaF,EAAnB,KAA+BJ,IAEjCI,K,IAMUG,E,gCAUnB,WAAYC,GAAQ,IAAD,eACjB,cAAMA,IATRC,iBAAmB,SAAUC,GAE3B,OADAC,QAAQC,IAAIF,GACG,SAARA,GAMU,EAJnBG,aAAe,SAAUH,GACvBI,KAAKC,SAAS,CAAEC,WAAYF,KAAKL,iBAAiBC,MAMlDO,IAAWC,mBAAkB,SAACR,GAAS,EAAKG,aAAaH,EAAIS,gBAC7D,IAAIC,EAAM,EAAKX,iBAAiBQ,IAAWI,kBAJ1B,OAKjB,EAAKC,MAAQ,CACXC,aAAa,EACbP,WAAYI,GAPG,E,2CAWnB,oBAAAI,EAAAC,OAAA,kEAAAD,EAAA,MACQE,IAAenC,IADvB,OAEEuB,KAAKC,SAAS,CAACQ,aAAa,IAC5BT,KAAKC,SAAL,OAAkBD,KAAKQ,OAAvB,IAA8BC,aAAY,KAH5C,8D,+BAMA,WACET,KAAKa,oB,oBAGP,WACE,IAAI5B,EAAWD,EAAUgB,KAAKN,MAAMT,SAAU,CAACiB,WAAYF,KAAKQ,MAAMN,aACtE,OAAIF,KAAKQ,MAAMC,YACF,kBAACK,EAAA,EAAD,CAAcC,MAAO,CAACC,KAAK,EAAGC,gBAAiBjB,KAAKQ,MAAMN,WAAa3B,EAAmBA,IAClGU,GAGI,kBAAC,IAAD,oB,GAtC8BiC,a,g/BCd3C,IAAMC,EAAiB,CACrBC,KAAM,CACJC,MAAO,WAETC,UAAW,CACTD,MAAO9C,IAILgD,EAAgB,CACpBH,KAAM,CACJC,MAAO,WAETC,UAAW,CACTD,MAAO9C,IAIEiD,EAAb,gCAGE,WAAY9B,GAAQ,+BACZA,GAJV,kCAOE,WACE,IAAI+B,EAAY,GACZzB,KAAKN,MAAMd,OACb6C,EAAY,CAAEC,WAAY,OAAQL,MAAO9C,EAAoByC,KAAK,EAAGW,eAAe,aAAcC,cAAc,MAAOC,SAAS,SAG9H7B,KAAKN,MAAMoC,SACbL,EAAUM,UAAY,SACtBN,EAAUJ,MAAQ9C,GAGhByB,KAAKN,MAAMsC,MACbP,EAAS,OACJA,GADI,IAEPQ,SAAU,GACVC,kBAAmB,MACnBC,OAAQ,OACRC,UAAW,UAIXpC,KAAKN,MAAM2C,MACbZ,EAAS,OACJA,GADI,IAEPQ,SAAU,GACVC,kBAAmB,SACnBC,OAAQ,OACRC,UAAW,UAKbX,GAD4B,IAA1BzB,KAAKN,MAAMQ,WACJ,OAAOqB,EAAcH,MAAQK,GAE7B,OAAON,EAAeC,MAAQK,GAEzC,IAAIxC,EAAWD,EAAUgB,KAAKN,MAAMT,SAAU,CAC5CiB,WAAYF,KAAKN,MAAMQ,aAGzB,OACE,kBAAC,IAAD,CAAOa,MAAO,CAACU,EAAWzB,KAAKN,MAAMqB,QAClC9B,OAjDT,GAA0BiC,aAuDboB,EAAb,gCACE,WAAY5C,GAAQ,IAAD,cACjB,cAAMA,GAEN,IAAIqB,EAAQ,GAHK,YAKGwB,IAAhB7C,EAAMqB,QACRA,EAAQrB,EAAMqB,OAGhB,EAAKP,MAAQ,CACXO,MAAM,OACDA,GADA,IAEHyB,mBAAoB,YACpBnB,MAAO7C,KAbM,EADrB,kCAmBE,WAAU,IAAD,OACP,OACE,kBAACiE,EAAA,EAAD,CACEC,QAAS,kBAAMC,IAAQC,QAAQ,EAAKlD,MAAMmD,OAC1C9B,MAAO,CAAE+B,OAAQ,EAAGC,QAAQ,EAAGpB,eAAe,aAAcqB,UAAU,YAEtE,kBAAC,EAAD,CAAMjC,MAAOf,KAAKQ,MAAMO,OAAQf,KAAKN,MAAMT,eAzBnD,GAA0BiC,aAiDb+B,EAAb,gCACE,WAAYvD,GAAQ,+BACZA,GAFV,kCAKE,WACE,IAAI+B,EAAYzB,KAAKN,MAAMQ,WACvBqB,EAAcD,UACdH,EAAeG,UACfrC,EAAWD,EAAUgB,KAAKN,MAAMT,SAAU,CAC5CiB,WAAYF,KAAKN,MAAMQ,aAGrBgD,EAAcC,IAAWC,OAAO,CAClCC,IAAK,CAAEpB,SAAU,GAAIP,WAAY,QAAQsB,UAAU,YAErD,OACE,kBAAC,IAAD,CACEjC,MAAO,CACL,CACEiC,UAAU,UACVM,kBAAmB,MACnB3B,eAAgB,eAChB4B,WAAY,YAEdvD,KAAKN,MAAM8D,iBAGb,kBAAC,IAAD,CAAOzC,MAAO,CAACU,EAAWyB,EAAYG,IAAKrD,KAAKN,MAAMqB,QAAtD,IACI9B,EADJ,KAGA,kBAAC,IAAD,CAAO8B,MAAO,CAACU,EAAWzB,KAAKN,MAAM+D,cAClCzD,KAAKN,MAAMgE,aAhCtB,GAA2BxC,a,o/BC7HrByC,G,gCAEA,WAAYjE,GAAQ,+BACZA,G,kCAGR,WACE,IAAIqB,EAAQ,CAAEW,WAAY,QAASO,SAAU,GAAIZ,MAAO9C,EAAoByE,UAAW,SAAUd,kBAAkB,UA0BnH,OAxBIlC,KAAKN,MAAMkE,KAAKC,QAClB9C,EAAK,OAAQA,GAAR,IAAeW,WAAY,gBAG9B1B,KAAKN,MAAMkE,KAAK5B,MAClBjB,EAAK,OACAA,GADA,IAEHkB,SAAU,GACV6B,WAAY,GACZ5B,kBAAmB,MACnBC,OAAQ,OACRC,UAAW,UAIXpC,KAAKN,MAAMkE,KAAKvB,MAClBtB,EAAK,OACAA,GADA,IAEHkB,SAAU,GACVC,kBAAmB,SACnBC,OAAQ,OACRC,UAAW,UAGR,kBAAC,IAAD,CAAOrB,MAAO,CAACA,EAAOf,KAAKN,MAAMqB,QAASf,KAAKN,MAAMT,c,GAjCzCiC,aAsCd6C,GAAb,gCACE,WAAYrE,GAAO,+BACXA,GAFV,kCAKI,WACE,IAAIkE,EAAO,GAMT,OALFA,EAAKvB,MAAMrC,KAAKN,MAAM2C,IACtBuB,EAAK5B,MAAMhC,KAAKN,MAAMsC,IACtB4B,EAAKC,QAAQ7D,KAAKN,MAAMmE,MAId,kBAAC,GAAD,CAAc9C,MAAOf,KAAKN,MAAMqB,MAAO6C,KAAMA,GAAO5D,KAAKN,MAAMT,cAb/E,GAA2BiC,aAkBd8C,GAAb,gCACI,WAAYtE,GAAO,IAAD,cACd,cAAMA,GAEN,IAAIqB,EAAQ,CACRM,MAAO9C,EAEPmD,WAAW,UACXO,SAAS,GACTgC,YAAY,IARF,YAWG1B,IAAb7C,EAAMwE,KACNnD,EAAMkB,SAAW,SAGJM,IAAb7C,EAAMyE,KACNpD,EAAMkB,SAAW,SAGJM,IAAb7C,EAAM0E,KACNrD,EAAMkB,SAAW,SAGJM,IAAb7C,EAAM2E,KACNtD,EAAMkB,SAAW,SAGJM,IAAb7C,EAAM4E,KACNvD,EAAMkB,SAAW,SAGJM,IAAb7C,EAAM6E,KACNxD,EAAMkB,SAAW,IAGrB,EAAKzB,MAAQ,CAACO,MAAOA,GAnCP,EADtB,kCAuCI,WACI,OAAO,kBAAC,IAAD,CAAMA,MAAO,CAAC,CAACyD,kBAAkB,EAAGC,kBAAmBlG,GAAqByB,KAAKN,MAAM8D,iBAC9F,kBAAC,IAAD,CAAOzC,MAAO,CAACf,KAAKQ,MAAMO,MAAOf,KAAKN,MAAMqB,QAASf,KAAKN,MAAMT,eAzCxE,GAA6BiC,a,8bC5DRwD,G,2HAEjB,WACI,IAAIzF,EAAWD,EAAUgB,KAAKN,MAAMT,SAAU,CAC1CiB,WAAYF,KAAKN,MAAMQ,aAE3B,OACI,kBAAC,KAAD,CAAKa,MAAOf,KAAKN,MAAMqB,OACtB9B,O,GAR2BiC,a,0cCMxC,IAAMyD,GAAsBxB,IAAWC,OAAO,CAC1CwB,UAAW,CACP3D,gBAAiB1C,KAInBsG,GAAqB1B,IAAWC,OAAO,CACzCwB,UAAW,CACP3D,gBAAiB1C,KAIJuG,G,iCACnB,WAAYpF,GAAQ,+BACZA,G,kCAIR,WACE,IAAIqB,EAAQf,KAAKN,MAAMQ,WAAa2E,GAAkB,UAAgBF,GAAmB,UACrF1F,EAAWD,EAAUgB,KAAKN,MAAMT,SAAU,CAACiB,WAAYF,KAAKN,MAAMQ,aACtE,OAEI,kBAAC,IAAD,CAAOa,MAAO,CAACA,EAAMf,KAAKN,MAAMqB,QAC/B9B,O,GAZyBiC,aAkBlC4D,GAAKC,UAAY,CACfhE,MAAOiE,KAAUC,Q,sgCCrCEC,G,iCAGnB,WAAYxF,GAAQ,IAAD,sBACjB,cAAMA,IAHRyF,gBAAkB,QAKQ5C,IAApB7C,EAAM0F,UACR,EAAK5E,MAAQ,CACXO,MAAO,CACL6D,UAAW,CACT3D,gBAAiB1C,EACjB8G,aAAc,GACd/B,kBAAmB,GACnBgC,gBAAiB,GACjB/B,WAAW,SACXP,UAAU,cAEZ5B,KAAM,CAAEM,WAAY,UAIxB,EAAKlB,MAAQ,CACXO,MAAO,CACL6D,UAAW,CACPhD,cAAc,MACd2B,WAAW,SACbgC,YAAahH,EACbiH,YAAa,EACbH,aAAc,GACd/B,kBAAmB,GACnBgC,gBAAiB,GACjBtC,UAAU,cAEZ5B,KAAM,CAAEM,WAAY,UA9BT,E,6CAmCnB,SAAkB+D,QACalD,IAAzBvC,KAAKN,MAAM0F,UACbpF,KAAKC,SAAS,CACZc,MAAM,SACDf,KAAKQ,MAAMO,OADX,IAEH6D,UAAU,SACL5E,KAAKQ,MAAMO,MAAM6D,WADb,IAEP3D,gBAAiBjB,KAAKN,MAAMQ,WACxB3B,EACAA,QAKVyB,KAAKC,SAAS,CACZc,MAAM,SACDf,KAAKQ,MAAMO,OADX,IAEH6D,UAAU,SACL5E,KAAKQ,MAAMO,MAAM6D,WADb,IAEPW,YAAavF,KAAKN,MAAMQ,WACpB3B,EACAA,EACF0C,gBAAiBjB,KAAKN,MAAMQ,WAC1B3B,EACAA,U,gCAMd,SAAmBmH,QACYnD,IAAzBvC,KAAKN,MAAM0F,UACXpF,KAAKC,SAAS,CACVc,MAAM,SACDf,KAAKQ,MAAMO,OADX,IAEH6D,UAAU,SACL5E,KAAKQ,MAAMO,MAAM6D,WADb,IAEP3D,gBAAiB1C,QAKzByB,KAAKC,SAAS,CACZc,MAAM,SACDf,KAAKQ,MAAMO,OADX,IAEH6D,UAAU,SACL5E,KAAKQ,MAAMO,MAAM6D,WADb,IAEPW,YAAahH,EACb0C,gBAAiB,sB,oBAQ7B,WAAU,IAYJ0E,EASAC,EArBG,OACHpC,EAAc,SACbxD,KAAKQ,MAAMO,MAAM6D,WACjB5E,KAAKN,MAAM8D,gBAGZzC,EAAK,SACJf,KAAKQ,MAAMO,MAAMK,MADb,IAEPC,MAAOrB,KAAKN,MAAMQ,WAAa,OAAS,QACrCF,KAAKN,MAAMqB,OAmBhB,OAdE4E,OADyBpD,IAAvBvC,KAAKN,MAAMgD,QACF,WACT7C,QAAQC,IAAI,0BAGHE,KAAKN,MAAMgD,aAIIH,IAAxBvC,KAAKN,MAAMkG,WACXA,EAAW5F,KAAKN,MAAMkG,UAMtB,kBAAC,IAAD,CAAM7E,MAAO,CAACC,KAAK,EAAGuC,WAAW,WACnC,kBAACsC,GAAA,EAAD,CACEC,WAAY,kBAAM,EAAKC,sBACvBC,UAAW,kBAAM,EAAKC,qBACtBvD,QAAS,kBAAMiD,KACf5E,MAAOyC,GAENoC,EACD,kBAAC,IAAD,CAAM7E,MAAOA,GAAb,IAAsBf,KAAKN,MAAMT,SAAjC,W,GAnI4BiC,a,ydCOfgF,G,iCACnB,WAAYxG,GAAQ,IAAD,sBACjB,cAAMA,IAYRyG,oBAAsB,SAAC/E,GACrB,EAAKnB,SAAS,CACZmG,MAAOhF,KAZT,EAAKZ,MAAQ,CACX4F,MAAO,IAGT,EAAKC,kBACyB9D,IAA5B,EAAK7C,MAAM2G,aACP,EAAKF,oBACL,EAAKzG,MAAM2G,aAVA,E,kCAmBnB,WAAU,IAAD,OACH7C,EAAiB,CACnBiB,kBAAmBzE,KAAKN,MAAMQ,WAC1B3B,EACAA,EACJiG,kBAAmB,EACnB8B,kBAAmB,OACnBtF,KAAM,GAGJhB,KAAKN,MAAM6G,aACb/C,EAAeS,YAAc,EAC7BT,EAAegD,aAAe,GACrBxG,KAAKN,MAAM+G,UACpBjD,EAAegD,aAAe,EAE9BhD,EAAeS,YAAc,EAE/B,IAOIyC,EAPAC,EAAa,CACf1F,gBAAiBjB,KAAKN,MAAMQ,WACxB3B,EACAA,EACJ8C,MAAOrB,KAAKN,MAAMQ,WAAa,OAAS,QAItC0G,EAAazD,IAAWC,OAAO,CACjChC,KAAM,CACJH,gBAAiBjB,KAAKN,MAAMQ,WACxB3B,EACAA,EACF8C,MAAOrB,KAAKN,MAAMQ,WAAa,OAAS,UAW9C,YARyBqC,IAArBvC,KAAKN,MAAMgH,QACbA,EACE,kBAAC,EAAD,CAAM3F,MAAO,CAAC6F,EAAWxF,KAAMpB,KAAKN,MAAMkH,aACvC5G,KAAKN,MAAMgH,QAMhB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM3F,MAAO,CAACyC,EAAgBxD,KAAKN,MAAM8D,iBACvC,kBAAC,KAAD,CACEqD,aAAc7G,KAAKN,MAAMmH,aACzBC,mBAAoB9G,KAAKN,MAAMoH,mBAC/BC,YAAa/G,KAAKN,MAAMqH,YACxBhG,MAAO,CAAC4F,EAAY3G,KAAKN,MAAMqB,OAC/BqF,MAAOpG,KAAKN,MAAM0G,MAClBC,aAAc,kBAAM,EAAKA,mBAG7B,kBAAC,IAAD,KAAOK,Q,GA1EoBxF,aAAdgF,GA+EZnB,UAAY,CACjBwB,YAAavB,KAAUgC,QACvBC,WAAYjC,KAAUgC,QACtBP,UAAWzB,KAAUgC,SChFbE,KAAWC,IAAI,UAAUC,MAErCF,KAAWG,iBAAiB,UAAWC,OAAQ,SAAAC,GACrCD,OAAOE,cAGjB,IAAI5B,GACF,kBAAC6B,GAAA,EAAD,CAAwBC,KAAK,QAAQC,KAAM,GAAItG,MAAO9C,IAGzC,SAASqJ,KACtB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAM7G,MAAO,CAAC8G,GAAOjD,YACnB,kBAAC,GAAD,CAAY7D,MAAO,CAAEuC,kBAAkB,GAAIN,UAAW,SAAUoE,MAAM,SACpE,kBAAC,GAAD,CAAOrG,MAAO,CAAE+G,aAAc,KAA9B,aACa,IACX,kBAAC,GAAD,CAAO9F,KAAG,EAAC6B,OAAK,GAAhB,sBAIF,kBAAC,EAAD,+NAImB,kBAAC,EAAD,CAAMjF,MAAI,GAAV,YAJnB,KAMA,kBAAC,EAAD,qHAE2C,IACzC,kBAAC,EAAD,CAAMiE,KAAK,6CAAX,UAHF,KAMA,kBAAC,GAAD,CACE0B,IAAE,EACFxD,MAAO,CAAEgH,UAAW,IACpBvE,eAAgB,CAAEsE,aAAc,KAHlC,QAQA,kBAAC,EAAD,uJAKA,kBAAC,GAAD,CACE/G,MAAO,CACLa,cAAe,MACf0B,kBAAmB,KACnB8D,MAAM,OACNvF,SAAS,OACTmG,WAAW,EACXzE,WAAY,eAGd,kBAAC,EAAD,CAAMxC,MAAO,CAACqG,MAAM,QAApB,iBACiB,IACf,kBAAC,EAAD,CAAMvE,KAAK,yBAAX,kBAFF,iEAMA,kBAAC,EAAD,CAAM9B,MAAO,CAACqG,MAAM,QAApB,UACS,kBAAC,EAAD,CAAMxI,MAAI,GAAV,QADT,wGAMA,kBAAC,EAAD,CAAMmC,MAAO,CAACqG,MAAM,QAApB,qEACqE,IACnE,kBAAC,EAAD,CAAMtF,QAAM,GAAZ,mBAAiC,MAIrC,kBAAC,EAAD,+EAIA,kBAAC,GAAD,cAEA,kBAAC,EAAD,oEAGA,kBAAC,EAAD,yDAEA,kBAAC,EAAD,CAAO4B,OAAO,oBAAd,8CAIA,kBAAC,GAAD,CAASa,IAAE,GAAX,WACA,kBAAC,EAAD,6DACA,kBAAC,GAAD,CAAMxD,MAAO,CAAEqG,MAAO,OAAQ7D,WAAY,WACxC,kBAAC,GAAD,CACEqC,SAAUA,GACVR,WAAS,EACT1C,QAAS,WACP7C,QAAQC,IAAI,UAJhB,gBAUF,kBAAC,EAAD,mIAIA,kBAAC,GAAD,CAAMiB,MAAO,CAAEwC,WAAY,aAAc0E,WAAY,KACnD,kBAAC,GAAD,CACErC,SAAUA,GACVR,WAAS,EACT1C,QAAS,WACP7C,QAAQC,IAAI,UAJhB,eASA,kBAAC,GAAD,CACE4C,QAAS,WACP7C,QAAQC,IAAI,UAFhB,UAQF,kBAAC,EAAD,4EAGA,kBAAC,GAAD,CAAMiB,MAAO,CAAEwC,WAAY,SAAU0E,WAAY,KAC/C,kBAAC,GAAD,CACE7C,WAAS,EACT1C,QAAS,WACP7C,QAAQC,IAAI,UAHhB,UAQA,kBAAC,GAAD,CACE4C,QAAS,WACP7C,QAAQC,IAAI,UAFhB,qBAQF,kBAAC,EAAD,8EAIA,kBAAC,EAAD,+EAIA,kBAAC,GAAD,CAAMiB,MAAO,CAAEwC,WAAY,SAAU0E,WAAY,KAC/C,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAMlH,MAAO,CAAEiC,UAAW,WAA1B,8CAIF,kBAAC,GAAD,CACEN,QAAS,WACP7C,QAAQC,IAAI,UAFhB,qBASF,kBAAC,GAAD,CAASyE,IAAE,GAAX,SAGA,kBAAC,EAAD,eAGA,kBAAC,GAAD,CAAOxD,MAAO,CAACkB,SAAS,IAAK2E,WAAY,CAAC3E,SAAS,IAAKyE,MAAM,0EAA0EH,aAAW,MAGvJ,kBAAC,KAAD,OAKN,IAAMsB,GAAS1E,IAAWC,OAAO,CAC/BwB,UAAW,CACT5D,KAAM,EACNoG,MAAO,OACPpE,UAAU,UACVkF,cAAe,GACf3E,WAAW,iB,0DCxMf4E,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,6B,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,iC","file":"static/js/app.a334b790.chunk.js","sourcesContent":["\nexport const brandColors = {\n    '100': '#FEECE2',\n    '200': '#FED3C3',\n    '300': '#F9B4A5',\n    '400': '#F5987F',\n    '500': '#EF6968',\n    '600': '#CE4C58',\n    '700': '#AB3448',\n    '800': '#89213C',\n    '900': '#721534',\n}\n\nexport const successColors = {\n    '100': '#FEECE2',\n    '200': '#FED3C3',\n    '300': '#F9B4A5',\n    '400': '#F5987F',\n    '500': '#EF6968',\n    '600': '#CE4C58',\n    '700': '#AB3448',\n    '800': '#89213C',\n    '900': '#721534',\n}\n\nexport const infoColors = {\n    '100': '#FEECE2',\n    '200': '#FED3C3',\n    '300': '#F9B4A5',\n    '400': '#F5987F',\n    '500': '#EF6968',\n    '600': '#CE4C58',\n    '700': '#AB3448',\n    '800': '#89213C',\n    '900': '#721534',\n}\n\nexport const alertColors = {\n    '100': '#FEECE2',\n    '200': '#FED3C3',\n    '300': '#F9B4A5',\n    '400': '#F5987F',\n    '500': '#EF6968',\n    '600': '#CE4C58',\n    '700': '#AB3448',\n    '800': '#89213C',\n    '900': '#721534',\n}\n\nexport const dangerColors = {\n    '100': '#FEECE2',\n    '200': '#FED3C3',\n    '300': '#F9B4A5',\n    '400': '#F5987F',\n    '500': '#EF6968',\n    '600': '#CE4C58',\n    '700': '#AB3448',\n    '800': '#89213C',\n    '900': '#721534',\n}\n","import React, { Component } from \"react\";\nimport * as Font from \"expo-font\";\nimport { Appearance, SafeAreaView, StatusBar, Text, View } from \"react-native\";\nimport { brandColors } from \"./colors\";\n\nexport const contentFonts = {\n  content: require(\"../assets/fonts/Open_Sans/OpenSans-Regular.ttf\"),\n  bold: require(\"../assets/fonts/Open_Sans/OpenSans-Bold.ttf\"),\n  title: require('../assets/fonts/Montserrat/Montserrat-Black.ttf'),\n  heading: require('../assets/fonts/Montserrat/Montserrat-Bold.ttf'),\n  lightTitle: require('../assets/fonts/Montserrat/Montserrat-Light.ttf')\n};\n\nexport function propDrill(children, prop) {\n  const childrenWithProps = React.Children.map(children, child => {\n    // checking isValidElement is the safe way and avoids a typescript error too\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { ...prop });\n    }\n    return child;\n  });\n\n  return childrenWithProps;\n}\n\nexport default class AssetProvider extends Component {\n\n  setDarkModeState = function (obj) {\n    console.log(obj);\n    return obj === \"dark\" ? true : false;\n  };\n  onModeChange = function (obj){\n    this.setState({ isDarkMode: this.setDarkModeState(obj) });\n  }\n\n  constructor(props) {\n    super(props);\n\n    Appearance.addChangeListener((obj) => {this.onModeChange(obj.colorScheme)});\n    let tmp = this.setDarkModeState(Appearance.getColorScheme())\n    this.state = {\n      fontsLoaded: false,\n      isDarkMode: tmp,\n    };\n  }\n\n  async _loadFontsAsync() {\n    await Font.loadAsync(contentFonts);\n    this.setState({fontsLoaded: true});\n    this.setState({...this.state, fontsLoaded:true});\n  }\n\n  componentDidMount() {\n    this._loadFontsAsync();\n  }\n\n  render() {\n    let children = propDrill(this.props.children, {isDarkMode: this.state.isDarkMode})\n    if (this.state.fontsLoaded) {\n      return     <SafeAreaView style={{flex:1, backgroundColor: this.state.isDarkMode ? brandColors['900']:brandColors['100']}}>\n        {children}\n      </SafeAreaView>;\n    } else {\n      return <Text>Loading</Text>;\n    }\n\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Linking,\n  StyleSheet,\n  Text as RText,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { propDrill } from \"../utils/AssetProvider\";\nimport { brandColors, infoColors } from \"../utils/colors\";\n\nconst lightModeStyle = {\n  text: {\n    color: \"#000000\",\n  },\n  quoteText: {\n    color: brandColors['600']\n  }\n};\n\nconst darkModeStyle = {\n  text: {\n    color: \"#ffffff\",\n  },\n  quoteText: {\n    color: brandColors['400']\n  }\n};\n\nexport class Text extends Component {\n\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let styleMode = {};\n    if (this.props.bold) {\n      styleMode = { fontFamily: \"bold\", color: brandColors[\"500\"], flex:1, justifyContent:'flex-start', flexDirection:'row', flexWrap:'wrap' };\n    }\n\n    if (this.props.italic) {\n      styleMode.fontStyle = \"italic\";\n      styleMode.color = brandColors[\"500\"];\n    }\n\n    if (this.props.sup) {\n      styleMode = {\n        ...styleMode,\n        fontSize: 12,\n        textAlignVertical: \"top\",\n        height: \"100%\",\n        textAlign: \"left\",\n      };\n    }\n\n    if (this.props.sub) {\n      styleMode = {\n        ...styleMode,\n        fontSize: 12,\n        textAlignVertical: \"bottom\",\n        height: \"100%\",\n        textAlign: \"left\",\n      };\n    }\n\n    if (this.props.isDarkMode === true) {\n      styleMode = {...darkModeStyle.text,...styleMode};\n    } else {\n      styleMode = {...lightModeStyle.text,...styleMode};\n    }\n    let children = propDrill(this.props.children, {\n      isDarkMode: this.props.isDarkMode,\n    });\n\n    return (\n      <RText style={[styleMode, this.props.style]}>\n        {children}\n      </RText>\n    );\n  }\n}\n\nexport class Link extends Component {\n  constructor(props) {\n    super(props);\n\n    let style = {};\n\n    if (props.style !== undefined) {\n      style = props.style;\n    }\n\n    this.state = {\n      style: {\n        ...style,\n        textDecorationLine: \"underline\",\n        color: infoColors[\"500\"],\n      },\n    };\n  }\n\n  render() {\n    return (\n      <TouchableOpacity\n        onPress={() => Linking.openURL(this.props.href)}\n        style={{ margin: 0, padding:0, justifyContent:'flex-start', alignSelf:'stretch'}}\n      >\n        <Text style={this.state.style}>{this.props.children}</Text>\n      </TouchableOpacity>\n    );\n  }\n}\n\n/* export class Quote extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let children  = propDrill(this.props.children, {isDarkMode: this.props.isDarkMode});\n    let styleMode = this.props.isDarkMode ? darkModeStyle.text : lightModeStyle.text;\n\n    return (\n      <View style={{flexDirection:'column', justifyContent:'flex-end', alignItems:'flex-end'}}>\n        <Text bold style={[{color: brandColors['500'], fontSize:'130%',fontFamily:'content'}]}>{children}</Text>\n        <Text bold italic style={[ {color: brandColors['600'], fontSize:'115%',fontFamily:'content'}]}>{this.props.author}</Text>\n      </View>\n    );\n  }\n} */\n\nexport class Quote extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let styleMode = this.props.isDarkMode\n      ? darkModeStyle.quoteText\n      : lightModeStyle.quoteText;\n    let children = propDrill(this.props.children, {\n      isDarkMode: this.props.isDarkMode,\n    });\n\n    let secondStyle = StyleSheet.create({\n      sec: { fontSize: 24, fontFamily: \"title\",alignSelf:'center' },\n    });\n    return (\n      <View\n        style={[\n          {\n            alignSelf:'stretch',\n            paddingHorizontal: \"15%\",\n            justifyContent: \"space-around\",\n            alignItems: \"flex-end\",\n          },\n          this.props.containerStyle,\n        ]}\n      >\n        <RText style={[styleMode, secondStyle.sec, this.props.style]}>\n          \"{children}\"\n        </RText>\n        <RText style={[styleMode, this.props.authorStyle]}>\n          {this.props.author}\n        </RText>\n      </View>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Text as RText, View\n} from \"react-native\";\nimport {brandColors, infoColors, alertColors, dangerColors, successColors} from '../utils/colors';\n\n\n\nclass Intern_Title extends Component {\n   \n      constructor(props) {\n        super(props);\n      }\n    \n      render() {\n        let style = { fontFamily: \"title\", fontSize: 48, color: brandColors['500'], alignSelf: 'center', textAlignVertical:'bottom'};\n        \n        if (this.props.args.light) {\n          style = { ...style, fontFamily: \"lightTitle\" };\n        }\n\n        if (this.props.args.sup) {\n          style = {\n            ...style,\n            fontSize: 12,\n            lineHeight: 40,\n            textAlignVertical: \"top\",\n            height: \"100%\",\n            textAlign: \"left\",\n          };\n        }\n    \n        if (this.props.args.sub) {\n          style = {\n            ...style,\n            fontSize: 12,\n            textAlignVertical: \"bottom\",\n            height: \"100%\",\n            textAlign: \"left\",\n          };\n        }    \n        return <RText style={[style, this.props.style]}>{this.props.children}</RText>;\n      }\n}\n\n\nexport class Title extends Component {\n  constructor(props){\n    super(props);\n  }\n\n    render() {\n      let args = {}\n      args.sub = this.props.sub ? true : false;\n      args.sup = this.props.sup ? true : false;\n      args.light = this.props.light ? true : false;\n\n  \n        return (\n                <Intern_Title style={this.props.style} args={args}>{this.props.children}</Intern_Title>\n        )\n    }\n}\n\nexport class Heading extends Component{\n    constructor(props){\n        super(props);\n\n        let style = {\n            color: brandColors['500'],\n\n            fontFamily:'heading',\n            fontSize:36,\n            paddingLeft:16\n        }\n\n        if (props.h6 !== undefined) {\n            style.fontSize = 18\n        }\n\n        if (props.h5 !== undefined) {\n            style.fontSize = 22\n        }\n\n        if (props.h4 !== undefined) {\n            style.fontSize = 24\n        }\n\n        if (props.h3 !== undefined) {\n            style.fontSize = 28\n        }\n\n        if (props.h2 !== undefined) {\n            style.fontSize = 32\n        }\n\n        if (props.h1 !== undefined) {\n            style.fontSize = 36\n        }\n\n        this.state = {style: style}\n    }\n\n    render(){\n        return <View style={[{borderBottomWidth:2, borderBottomColor: brandColors['500']}, this.props.containerStyle]}>\n        <RText style={[this.state.style, this.props.style]}>{this.props.children}</RText>\n        </View>;\n    }\n}\n","import React, { Component } from 'react'\nimport { KeyboardAwareScrollView as RSV } from 'react-native-keyboard-aware-scroll-view'\nimport { propDrill } from './AssetProvider';\n\nexport default class ScrollView extends Component {\n\n    render() {\n        let children = propDrill(this.props.children, {\n            isDarkMode: this.props.isDarkMode,\n          });      \n        return (\n            <RSV style={this.props.style}>\n            {children}            \n            </RSV>\n        )\n    }\n}\n","\nimport React, { Component } from \"react\";\nimport { Platform, SafeAreaView, StyleSheet, View as OView } from \"react-native\";\n\nimport { propDrill } from \"./AssetProvider\";\nimport { brandColors } from \"./colors\";\nimport PropTypes from 'prop-types';\nimport { StatusBar } from \"expo-status-bar\";\n\n\nconst lightModeStyleGuide = StyleSheet.create({\n    container: {\n        backgroundColor: brandColors['100']\n    }\n});\n\nconst darkModeStyleGuide = StyleSheet.create({\n    container: {\n        backgroundColor: brandColors['900']\n    }\n});\n\nexport default class View extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  render() {\n    let style = this.props.isDarkMode ? darkModeStyleGuide['container'] : lightModeStyleGuide['container'];\n    let children = propDrill(this.props.children, {isDarkMode: this.props.isDarkMode});\n    return (\n      \n        <OView style={[style,this.props.style]}>\n        {children}\n        </OView>\n    );\n  }\n}\n\nView.propTypes = {\n  style: PropTypes.object,\n}\n","import React, { Component } from \"react\";\nimport { Pressable, StyleSheet, Text, View } from \"react-native\";\nimport { brandColors } from \"../utils/colors\";\n\nexport default class Button extends Component {\n  globalTextStyle = {};\n\n  constructor(props) {\n    super(props);\n\n    if (props.secondary === undefined) {\n      this.state = {\n        style: {\n          container: {\n            backgroundColor: brandColors[\"500\"],\n            borderRadius: 30,\n            paddingHorizontal: 24,\n            paddingVertical: 12,\n            alignItems:'center',\n            alignSelf:'flex-start'\n          },\n          text: { fontFamily: \"bold\" },\n        },\n      };\n    } else {\n      this.state = {\n        style: {\n          container: {\n              flexDirection:'row',\n              alignItems:'center',\n            borderColor: brandColors[\"500\"],\n            borderWidth: 2,\n            borderRadius: 30,\n            paddingHorizontal: 24,\n            paddingVertical: 12,\n            alignSelf:'flex-start'\n          },\n          text: { fontFamily: \"bold\" },\n        },\n      };\n    }\n  }\n  pressedInFunction(pressedCustomContainerStyle) {\n    if (this.props.secondary === undefined) {\n      this.setState({\n        style: {\n          ...this.state.style,\n          container: {\n            ...this.state.style.container,\n            backgroundColor: this.props.isDarkMode\n              ? brandColors[\"300\"]\n              : brandColors[\"700\"],\n          },\n        },\n      });\n    } else {\n      this.setState({\n        style: {\n          ...this.state.style,\n          container: {\n            ...this.state.style.container,\n            borderColor: this.props.isDarkMode\n              ? brandColors[\"300\"]\n              : brandColors[\"700\"],\n              backgroundColor: this.props.isDarkMode\n              ? brandColors[\"200\"]\n              : brandColors[\"800\"],\n          },\n        },\n      });\n    }\n  }\n  pressedOutFunction(containerCustomStyle) {\n    if (this.props.secondary === undefined) {\n        this.setState({\n            style: {\n              ...this.state.style,\n              container: {\n                ...this.state.style.container,\n                backgroundColor: brandColors[\"500\"],\n              },\n            },\n          });\n      } else {\n        this.setState({\n          style: {\n            ...this.state.style,\n            container: {\n              ...this.state.style.container,\n              borderColor: brandColors['500'],\n              backgroundColor: 'transparent'\n            },\n          },\n        });\n      }\n\n\n  }\n  render() {\n    let containerStyle = {\n      ...this.state.style.container,\n      ...this.props.containerStyle,\n    };\n\n    let style = {\n      ...this.state.style.text,\n      color: this.props.isDarkMode ? \"#fff\" : \"#000\",\n      ...this.props.style,\n    };\n\n    let callback;\n    if (this.props.onPress === undefined) {\n      callback = () => {\n        console.log(\"add onPress function!\");\n      };\n    } else {\n      callback = this.props.onPress;\n    }\n\n    let leftIcon;\n    if (this.props.leftIcon !== undefined) {\n        leftIcon = this.props.leftIcon;\n    } else {\n        \n    }\n\n    return (\n        <View style={{flex:1, alignItems:'center'}}>\n      <Pressable\n        onPressOut={() => this.pressedOutFunction()}\n        onPressIn={() => this.pressedInFunction()}\n        onPress={() => callback()}\n        style={containerStyle}\n      >\n        {leftIcon}\n        <Text style={style}> {this.props.children} </Text>\n      </Pressable>\n      </View>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  View,\n  TextInput as RInput,\n  TextPropTypes,\n  StyleSheet,\n} from \"react-native\";\nimport { brandColors } from \"../utils/colors\";\nimport { Text } from \"../texts/content\";\nimport PropTypes from \"prop-types\";\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: \"\",\n    };\n\n    this.onChangeText =\n      this.props.onChangeText === undefined\n        ? this.defaultOnChangeText\n        : this.props.onChangeText;\n  }\n\n  defaultOnChangeText = (text) => {\n    this.setState({\n      value: text,\n    });\n  };\n\n  render() {\n    let containerStyle = {\n      borderBottomColor: this.props.isDarkMode\n        ? brandColors[\"100\"]\n        : brandColors[\"900\"],\n      borderBottomWidth: 2,\n      borderBottomStyle: \"line\",\n      flex: 1,\n    };\n\n    if (this.props.centerAlign) {\n      containerStyle.paddingLeft = 4;\n      containerStyle.paddingRight = 4;\n    } else if (this.props.leftAlign) {\n      containerStyle.paddingRight = 8;\n    } else {\n      containerStyle.paddingLeft = 8;\n    }\n    let inputStyle = {\n      backgroundColor: this.props.isDarkMode\n        ? brandColors[\"100\"]\n        : brandColors[\"900\"],\n      color: this.props.isDarkMode ? \"#000\" : \"#fff\",\n    };\n\n    let error;\n    let errorStyle = StyleSheet.create({\n      text: {\n        backgroundColor: this.props.isDarkMode\n          ? brandColors[\"300\"]\n          : brandColors[\"700\"],\n          color: this.props.isDarkMode ? '#000' : '#fff'\n      },\n    });\n    if (this.props.error !== undefined) {\n      error = (\n        <Text style={[errorStyle.text, this.props.errorStyle]}>\n          {this.props.error}\n        </Text>\n      );\n    }\n\n    return (\n      <View>\n        <View style={[containerStyle, this.props.containerStyle]}>\n          <RInput\n            keyboardType={this.props.keyboardType}\n            keyboardAppearance={this.props.keyboardAppearance}\n            placeholder={this.props.placeholder}\n            style={[inputStyle, this.props.style]}\n            value={this.props.value}\n            onChangeText={() => this.onChangeText()}\n          ></RInput>\n        </View>\n        <View>{error}</View>\n      </View>\n    );\n  }\n\n  static propTypes = {\n    centerAlign: PropTypes.boolean,\n    rightAlign: PropTypes.boolean,\n    leftAlign: PropTypes.boolean,\n  };\n}\n","import React from \"react\";\nimport { Link, Quote, Text } from \"./texts/content\";\nimport { Heading, Title } from \"./texts/titles\";\nimport AssetProvider from \"./utils/AssetProvider\";\nimport ScrollView from \"./utils/ScrollView\";\nimport View from \"./utils/View\";\n\nimport Button from \"./inputs/button\";\nimport { KeyboardAvoidingView, LogBox, Platform, StatusBar,SafeAreaView, StyleSheet, Dimensions } from \"react-native\";\nimport { brandColors } from \"./utils/colors\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Input from \"./inputs/inputs\";\n\nlet width = Dimensions.get('window').width;\n\nDimensions.addEventListener(\"change\", (window, screen => {\n  width = window.innerWidth;\n}));\n\nlet leftIcon = (\n  <MaterialCommunityIcons name=\"alien\" size={24} color={brandColors[\"500\"]} />\n);\n\nexport default function App() {\n  return (\n    <AssetProvider>\n      <View style={[styles.container]}>\n        <ScrollView style={{ paddingHorizontal:16, alignSelf: \"center\", width:'100%' }}>\n          <Title style={{ marginBottom: 20 }}>\n            Stardom UI{\" \"}\n            <Title sup light>\n              by Pablo Gómez\n            </Title>\n          </Title>\n          <Text>\n            Stardom UI is front-end framework which customizes the base React\n            Native For Web components to offer a new set of components easy to\n            use. The following sections will demonstrate the base components\n            defined by their <Text bold>category</Text>.\n          </Text>\n          <Text>\n            If you would like to discover some solutions which integrate Stardom\n            UI, you can visit the main repository on{\" \"}\n            <Link href=\"https://github.com/pgomezponce/stardom-ui\">GitHub</Link>\n            .\n          </Text>\n          <Heading\n            h1\n            style={{ marginTop: 20 }}\n            containerStyle={{ marginBottom: 10 }}\n          >\n            Text\n          </Heading>\n\n          <Text>\n            This is is standard text with multiple lines, within the range of 3\n            - 5 lines. This is a hard case where you find the maximum amount of\n            lines.\n          </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              paddingHorizontal: \"1%\",\n              width:'auto',\n              flexWrap:'wrap',\n              flexShrink:1,\n              alignItems: 'flex-start'\n            }}\n          >\n            <Text style={{width:'33%'}}>\n              If you want to{\" \"}\n              <Link href=\"https://www.google.es\">link something</Link>, you\n              should make it inline and provide visual details to it.\n            </Text>\n\n            <Text style={{width:'33%'}}>\n              To use <Text bold>bold</Text> text means to allow a quick reading\n              of a text. Provide enough content in bold to make a quick read.\n            </Text>\n\n\n            <Text style={{width:'33%'}}>\n              A word in an italic style means it is written in another language,{\" \"}\n              <Text italic>¿de acuerdo?</Text>{\" \"}\n            </Text>\n\n          </View>\n          <Text>\n            Titles must be 1-liners, with space enough to understand its\n            concepts.\n          </Text>\n          <Title>Title</Title>\n\n          <Text>\n            Quotes can be inline inside a standard text (Author, 2020).\n          </Text>\n          <Text>Quotes can be taken apart also if require space.</Text>\n\n          <Quote author=\"Kingdom Hearts 2\">\n            A Scattered dream is like a far-off memory\n          </Quote>\n\n          <Heading h1>Buttons</Heading>\n          <Text>Buttons must contain all information within the box.</Text>\n          <View style={{ width: \"100%\", alignItems: \"center\" }}>\n            <Button\n              leftIcon={leftIcon}\n              secondary\n              onPress={() => {\n                console.log(\"JAJA\");\n              }}\n            >\n              Sample text\n            </Button>\n          </View>\n          <Text>\n            If there are actions, buttons must be stacked vertically with a\n            minimal distance to differentiate clearly and suggestions.\n          </Text>\n          <View style={{ alignItems: \"flex-start\", marginLeft: 20 }}>\n            <Button\n              leftIcon={leftIcon}\n              secondary\n              onPress={() => {\n                console.log(\"JAJA\");\n              }}\n            >\n              Sample Text\n            </Button>\n            <Button\n              onPress={() => {\n                console.log(\"JAJA\");\n              }}\n            >\n              Hello\n            </Button>\n          </View>\n          <Text>\n            There must be a clear way to stop the process always. For instance:\n          </Text>\n          <View style={{ alignItems: \"center\", marginLeft: 20 }}>\n            <Button\n              secondary\n              onPress={() => {\n                console.log(\"JAJA\");\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              onPress={() => {\n                console.log(\"JAJA\");\n              }}\n            >\n              Keep with action\n            </Button>\n          </View>\n          <Text>\n            If possible, place also a cancel button at the header if it is\n            shown.\n          </Text>\n          <Text>\n            If the button contains lots of text, buttons can be divided like\n            this:\n          </Text>\n          <View style={{ alignItems: \"center\", marginLeft: 20 }}>\n            <Text>\n              <Link style={{ alignSelf: \"center\" }}>\n                Extended button, ¿want to click on it?\n              </Link>\n            </Text>\n            <Button\n              onPress={() => {\n                console.log(\"JAJA\");\n              }}\n            >\n              Keep with action\n            </Button>\n          </View>\n\n          <Heading h1>\n            Input\n          </Heading>\n          <Text>\n            LAlala\n          </Text>\n          <Input style={{fontSize:72}} errorStyle={{fontSize:16}} error='This is really a loooooooong error message, as a maximum exercisedadada' centerAlign></Input>\n        </ScrollView>\n      </View>\n      <StatusBar/>\n    </AssetProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    alignSelf:'stretch',\n    paddingBottom: 16,\n    alignItems:'flex-start',\n  },\n});\n","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Montserrat-Black.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Montserrat-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Montserrat-Light.ttf\";"],"sourceRoot":""}